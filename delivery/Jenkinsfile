pipeline {
    agent any

     environment {
         AWS_REGION="eu-west-1"
         IMAGE_REPOSITORY_NAME="ct5171-devops-assignment"
     }

    stages {
        stage ("Clone Project") {
            steps {
                git "https://github.com/walsm232/CT5171-DevOps-Assignment.git"
            }
        }
        stage ("Build Package") {
            steps {
                sh "mvn clean install"
            }
        }
        stage ("Login to AWS ECR") {
            steps {
                withCredentials([string(credentialsId: 'aws-account-id', variable: 'AWS_ACCOUNT_ID')]) {
                    sh "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS - password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
            }
        }
        stage ("Build Image") {
            steps {
                sh '''
                    DOCKER_BUILDKIT=1 docker build . \
                    -t ct5171-devops-assignment:latest \
                    -t ct5171-devops-assignment:${BUILD_NUMBER}


                    aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 494026421561.dkr.ecr.eu-west-1.amazonaws.com

                    docker tag ct5171-devops-assignment:latest 494026421561.dkr.ecr.eu-west-1.amazonaws.com/ct5171-devops-assignment:latest
                    docker tag ct5171-devops-assignment:${BUILD_NUMBER} 494026421561.dkr.ecr.eu-west-1.amazonaws.com/ct5171-devops-assignment:${BUILD_NUMBER}

                    docker push 494026421561.dkr.ecr.eu-west-1.amazonaws.com/ct5171-devops-assignment:latest
                    docker push 494026421561.dkr.ecr.eu-west-1.amazonaws.com/ct5171-devops-assignment:${BUILD_NUMBER}
                '''
            }
        }
    }
    post {
        always {
            archiveArtifacts allowEmptyArchive: true,
            artifacts: "target/*.war", fingerprint: true
        }
    }
}